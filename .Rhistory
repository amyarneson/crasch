tograph <- reshape(scores, varying = list(1:(ncol(scores))), idvar = "person", direction = "long",
timevar = "item", v.names = "score")
head(tograph)
class(tograph)
scores <- reshape(data.frame(as.matrix(results$scoresOrig[,which(results$itemInfo$cons.ID == results$consInfo$cons.ID[d])])),
varying = list(1:(ncol(scores))), idvar = "person", direction = "long",
timevar = "item", v.names = "score")
head(scores)
tograph <- table(scores$score,scores$item,useNA="no")
tograph
tograph <- prop.table(table(scores$score,scores$item,useNA="no"),margin=2) }
tograph <- prop.table(table(scores$score,scores$item,useNA="no"),margin=2)
tograph
library(RColorBrewer)
display.brewer.pal()
brewer.pal.info()
brewer.pal.info
display.brewer.all()
brewer.pal.info[,1]
row.names(brewer.pal.info)
RColorBrewer::display.brewer.all()
stop('Invalid palatte. Choose "grey", "blue", or one of the listed RColorBrewer palattes (run RColorBrewer::display.brewer.all() to see all available palattes).')
stop('Invalid palatte. Choose "grey", "blue", or one of the listed RColorBrewer palattes.
(run RColorBrewer::display.brewer.all() to see all available palattes).')
palatte = "Set3"
ncol(cons) - 3
K <- ncol(cons) - 3
display.brewer.pal(K, palatte)
brewer.pal(K, palatte)
brewer.pal(14, palatte)
brewer.pal.info
brewer.pal.info
RColorBrewer::brewer.pal.info
which(row.names(RColorBrewer::brewer.pal.info) == palatte )
RColorBrewer::brewer.pal.info$maxcolors[which(row.names(RColorBrewer::brewer.pal.info) == palatte)]
K <= RColorBrewer::brewer.pal.info$maxcolors[which(row.names(RColorBrewer::brewer.pal.info) == palatte)]
tograph
color = brewer.pal(K, palatte)
color = RColorBrewer::brewer.pal(K, palatte)
color
levels(scores)
barplot(tograph)
dimnames(tograph)
results$consInfo[4:ncol(consInfo)]
results$consInfo[4:ncol(results$consInfo)]
cons[4:ncol(cons)]
results$itemInfo$item.name[which(results$itemInfo$cons.ID == results$consInfo$cons.ID[d])]
dimnames(tograph) <- list(cons[4:ncol(cons)],
results$itemInfo$item.name[which(results$itemInfo$cons.ID == results$consInfo$cons.ID[d])])
barplot(tograph)
tograph <- table(scores$score, scores$item, useNA="no")
dimnames(tograph) <- list(cons[4:ncol(cons)],
results$itemInfo$item.name[which(results$itemInfo$cons.ID == results$consInfo$cons.ID[d])])
barplot(tograph)
devtools::load_all()
load("~/OneDrive/Development/crasch/data/AMYcons.rda")
load("~/OneDrive/Development/crasch/data/AMYitem.rda")
load("~/OneDrive/Development/crasch/data/AMYvars.rda")
load("~/OneDrive/Development/crasch/data/AMYwide.rda")
test <- craschR(scores=AMYwide,itemInfo=AMYitem,consInfo=AMYcons,varsInfo=AMYvars,estPackage="TAM",consecutive=TRUE,retainOrig=TRUE,writeout=FALSE)
class(test)
neams(test)
names(test)
item.scores(test)
results <- test
results$estSummary$D
d = 1
cons <- results$consInfo[d,]
View(cons)
scores <- reshape(data.frame(as.matrix(results$scoresOrig[,which(results$itemInfo$cons.ID == results$consInfo$cons.ID[d])])),
varying = list(1:(ncol(scores))), idvar = "person",
direction = "long", timevar = "item", v.names = "score")
data.frame(as.matrix(results$scoresOrig[,which(results$itemInfo$cons.ID == results$consInfo$cons.ID[d])])
)
names(test)
names(results$itemInfo)
cons
cons <- results$consInfo[d,]
I <- sum(results$itemInfo$cons.ID == cons$cons.ID)
scores <- reshape(data.frame(as.matrix(results$scoresOrig[,which(results$itemInfo$cons.ID == results$consInfo$cons.ID[d])])),
varying = list(1:I), idvar = "person",
direction = "long", timevar = "item", v.names = "score")
View(scores)
rm(I,cons,scores)
devtools::load_all()
item.scores(test)
library(RColorBrewer)
cons <- results$consInfo[d,]
I <- sum(results$itemInfo$cons.ID == cons$cons.ID)
scores <- reshape(data.frame(as.matrix(results$scoresOrig[,which(results$itemInfo$cons.ID == results$consInfo$cons.ID[d])])),
varying = list(1:I), idvar = "person",
direction = "long", timevar = "item", v.names = "score")
rm(d,I,results)
item.scores(test)
test2 <- item.scores(test)
brewer.pal.info
results <- test
rm(test2)
cons <- results$consInfo[d,]
I <- sum(results$itemInfo$cons.ID == cons$cons.ID)
scores <- reshape(data.frame(as.matrix(results$scoresOrig[,which(results$itemInfo$cons.ID == results$consInfo$cons.ID[d])])),
varying = list(1:I), idvar = "person",
direction = "long", timevar = "item", v.names = "score")
K <- ncol(cons) - 3
tograph <- table(scores$score, scores$item, useNA="no")
tograph
dimnames(tograph) <- list(cons[4:ncol(cons)],
results$itemInfo$item.name[which(results$itemInfo$cons.ID == results$consInfo$cons.ID[d])])
d = 1
cons <- results$consInfo[d,]
I <- sum(results$itemInfo$cons.ID == cons$cons.ID)
scores <- reshape(data.frame(as.matrix(results$scoresOrig[,which(results$itemInfo$cons.ID == results$consInfo$cons.ID[d])])),
varying = list(1:I), idvar = "person",
direction = "long", timevar = "item", v.names = "score")
# replace score values with score names
K <- ncol(cons) - 3
tograph <- table(scores$score, scores$item, useNA="no")
dimnames(tograph) <- list(cons[4:ncol(cons)],
results$itemInfo$item.name[which(results$itemInfo$cons.ID == results$consInfo$cons.ID[d])])
palatte %in% row.names(brewer.pal.info)
palatte = "Set3"
palatte %in% row.names(brewer.pal.info)
K <= RColorBrewer::brewer.pal.info$maxcolors[which(row.names(RColorBrewer::brewer.pal.info) == palatte)]
color = RColorBrewer::brewer.pal(K, palatte)
?rainbow
color = rainbow(n = nrow(tograph), start = 4/6)
color
tograph
levels(scores)
names(scores)
row.names(tograph)
names(test)
test$classicalStats
test$estSummary
names(restulst$itemInfo)
names(results$itemInfo)
items <- results$itemInfo$item.name[results$itemInfo$cons.ID == cons$cons.ID]
items
list(addmargins(table(items,scores),margin=1),prop.table(table(items,scores),margin=1))
rm(items)
tograph
table(scores$item,scores$score)
prop.table(tograph)
?prop.table
?tabular
tabular(tograph)
tables::tabular(tograph)
?ftable
ftable(tograph)
tograph
barplot(tograph,col=color,beside=FALSE)
barplot(tograph,col=color,beside=FALSE,las=2)
barplot(tograph,col=color,beside=FALSE,las=1)
barplot(tograph,col=color,beside=FALSE,horiz=TRUE)
barplot(tograph,col=color,beside=FALSE,horiz=TRUE,las=2)
barplot(tograph, col=color, horiz=TRUE, las=2)
?rainbow
color = rainbow(n = nrow(tograph), start = 3/6, end = 5/6)
barplot(tograph, col=color, horiz=TRUE, las=2)
color = rainbow(n = nrow(tograph), start = 4/6 - 1/36, end = 4/6 + 1/36)
barplot(tograph, col=color, horiz=TRUE, las=2)
color = rainbow(n = nrow(tograph), start = 4/6 - 1/12, end = 4/6 + 1/12)
barplot(tograph, col=color, horiz=TRUE, las=2)
color = rainbow(n = nrow(tograph), start = 4/6 - 1/18, end = 4/6 + 1/24)
barplot(tograph, col=color, horiz=TRUE, las=2)
?rainbow
palette = "Set3"
rm(palatte)
color = rainbow(n = nrow(tograph), start = 4/6, end = 4/6, alpha = seq(0,1,1/nrow(tograph)))
color = rainbow(n = nrow(tograph), start = 4/6, end = 4/6+.001, alpha = seq(0,1,1/nrow(tograph)))
barplot(tograph, col=color, horiz=TRUE, las=2)
color = rainbow(n = nrow(tograph), start = 4/6, end = 4/6+.001, alpha = seq(.3,1,1/nrow(tograph)))
barplot(tograph, col=color, horiz=TRUE, las=2)
?seq
color = rainbow(n = nrow(tograph), start = 4/6, end = 4/6+.001, alpha = seq(.3,1,length.out = nrow(tograph)))
barplot(tograph, col=color, horiz=TRUE, las=2)
color = rainbow(n = nrow(tograph), start = 4/6, end = 4/6+.001, alpha = seq(.3,.9,length.out = nrow(tograph)))
barplot(tograph, col=color, horiz=TRUE, las=2)
color = RColorBrewer::brewer.pal(K, palette)
barplot(tograph, col=color, horiz=TRUE, las=2)
barplot(tograph[seq(nrow(tograph),1,-1),], col=color, horiz=TRUE, las=2)
?rev
tograph[seq(nrow(tograph),1,-1),]
barplot(tograph[,seq(ncol(tograph),1,-1)], col=color, horiz=TRUE, las=2)
barplot(tograph[,seq(ncol(tograph),1,-1)], col=color, horiz=TRUE, las=c(2,1))
?las
?plot
barplot(tograph[,seq(ncol(tograph),1,-1)], col=color, horiz=TRUE, las=1)
names(cons)
paste(cons$short.name)
barplot(tograph[,seq(ncol(tograph),1,-1)], col=color, horiz=TRUE, las=1,
main = paste(cons$short.name", Scores by Item"))
paste(cons$short.name", Scores by Item")
main = paste(cons$short.name,", Scores by Item"))
barplot(tograph[,seq(ncol(tograph),1,-1)], col=color, horiz=TRUE, las=1,
main = paste(cons$short.name,", Scores by Item"))
barplot(tograph[,seq(ncol(tograph),1,-1)], col=color, horiz=TRUE, las=1,
main = paste(cons$short.name,", Scores by Item",sep=""))
par()
?par
par(par())
par(par(no.readonly=TRUE))
origPar = par(no.readonly = TRUE) # so graphical parameters can be reset after
par(origPar)
rm(leg.labs)
legend(x="center",legend=row.names(tograph),pch=22,col="black",pt.bg=color,pt.cex=3)
legend(x="center",legend=row.names(tograph),pch=22,col="black",pt.bg=color)
legend(x="center",legend=row.names(tograph),pch=22,col="black",pt.bg=color,pt.cex=3)
legend(x="center",legend=row.names(tograph),pch=22,col="black",pt.bg=color)
legend(x="center",legend=row.names(tograph),pch=22,col="black",pt.bg=color,pt.cex=3)
warnings()
barplot(tograph[,seq(ncol(tograph),1,-1)], col=color, horiz=TRUE, las=1,
main = paste0(cons$short.name,", Scores by Item"))
legend(x = "center", legend = row.names(tograph), pch = 22, col = "black",
pt.bg = color, pt.cex = 3)
legend(x = "center", legend = row.names(tograph), pch = 22, col = "black",
pt.bg = color, pt.cex = 3)
legend(x = "center", legend = row.names(tograph), pch = 22, col = "black",
pt.bg = color, pt.cex = 3)
legend(x = "center", legend = row.names(tograph), pch = 22, col = "black",
pt.bg = color, pt.cex = 3)
par(origPar)
legend(x = "center", legend = row.names(tograph), pch = 22, col = "black",
pt.bg = color, pt.cex = 3)
legend(x = "center", legend = row.names(tograph), pch = 22, col = "black",
pt.bg = color)
?legend
pt.bg = color, horiz = TRUE)
legend(x = "center", legend = row.names(tograph), pch = 22, col = "black",
pt.bg = color, horiz = TRUE)
barplot(tograph[,seq(ncol(tograph),1,-1)], col=color, horiz=TRUE, las=1,
main = paste0(cons$short.name,", Scores by Item"))
legend(x = "center", legend = row.names(tograph), pch = 22, col = "black",
pt.bg = color, horiz = TRUE)
legend(x = "center", legend = row.names(tograph), pch = 22, col = "black",
pt.bg = color, horiz = TRUE, pt.cex = 3)
legend(x = "center", legend = row.names(tograph), pch = 22, col = "black",
pt.bg = color, horiz = TRUE, pt.cex = 2)
legend(x = "top", legend = row.names(tograph), pch = 22, col = "black",
pt.bg = color, horiz = TRUE, pt.cex = 2)
barplot(tograph[,seq(ncol(tograph),1,-1)], col=color, horiz=TRUE, las=1,
main = paste0(cons$short.name,", Scores by Item"))
legend(x = "top", legend = row.names(tograph), pch = 22, col = "black",
pt.bg = color, horiz = TRUE, pt.cex = 2)
tograph
barplot(cbind(rep(0,ncol(tograph)),tograph[,seq(ncol(tograph),1,-1)]), col=color, horiz=TRUE, las=1,
main = paste0(cons$short.name,", Scores by Item"))
barplot(tograph[,seq(ncol(tograph),1,-1)],cbind(rep(0,ncol(tograph))), col=color, horiz=TRUE, las=1,
main = paste0(cons$short.name,", Scores by Item"))
barplot(cbind(tograph[,seq(ncol(tograph),1,-1)],rep(0,ncol(tograph))), col=color, horiz=TRUE, las=1,
main = paste0(cons$short.name,", Scores by Item"))
legend(x = "top", legend = row.names(tograph), pch = 22, col = "black",
pt.bg = color, horiz = TRUE, pt.cex = 2)
barplot(cbind(tograph[,seq(ncol(tograph),1,-1)],rep(-1,ncol(tograph))),
col=color, horiz=TRUE, las=1,
main = paste0(cons$short.name,", Scores by Item"))
barplot(cbind(tograph[,seq(ncol(tograph),1,-1)],rep(0,ncol(tograph))),
col=color, horiz=TRUE, las=1,
main = paste0(cons$short.name,", Scores by Item"))
barplot(cbind(tograph[,seq(ncol(tograph),1,-1)],rep(0,ncol(tograph))),
col=color, horiz=TRUE, las=1, space = 0,
main = paste0(cons$short.name,", Scores by Item"))
?barplot
barplot(cbind(tograph[,seq(ncol(tograph),1,-1)],rep(0,ncol(tograph))),
col=color, horiz=TRUE, las=1, legend.text = TRUE,
main = paste0(cons$short.name,", Scores by Item"))
barplot(cbind(tograph[,seq(ncol(tograph),1,-1)],rep(0,ncol(tograph))),
col=color, horiz=TRUE, las=1,
main = paste0(cons$short.name,", Scores by Item"))
rep(0,ncol(tograph))
barplot(cbind(tograph[,seq(ncol(tograph),1,-1)],rep(0,nrow(tograph))),
col=color, horiz=TRUE, las=1,
main = paste0(cons$short.name,", Scores by Item"))
barplot(cbind(tograph[,seq(ncol(tograph),1,-1)],rep(0,nrow(tograph))),
col=color, horiz=TRUE, las=1, lty = 0,
main = paste0(cons$short.name,", Scores by Item"))
?par
barplot(cbind(tograph[,seq(ncol(tograph),1,-1)],rep(0,nrow(tograph))),
col=color, horiz=TRUE, las=1, border = NA,
main = paste0(cons$short.name,", Scores by Item"))
color = rainbow(n = nrow(tograph), start = 4/6, end = 4/6+.001,
alpha = seq(.3,.9,length.out = nrow(tograph)))
barplot(cbind(tograph[,seq(ncol(tograph),1,-1)],rep(0,nrow(tograph))),
col=color, horiz=TRUE, las=1, border = NA,
main = paste0(cons$short.name,", Scores by Item"))
color = gray(level = 1:nrow(tograph)/nrow(tograph))
barplot(cbind(tograph[,seq(ncol(tograph),1,-1)],rep(0,nrow(tograph))),
col=color, horiz=TRUE, las=1, border = NA,
main = paste0(cons$short.name,", Scores by Item"))
color = gray(level = nrow(tograph)/nrow(tograph):1)
color = gray(level = seq(nrow(tograph)/nrow(tograph),1,length.out=nrow(tograph))
)
barplot(cbind(tograph[,seq(ncol(tograph),1,-1)],rep(0,nrow(tograph))),
col=color, horiz=TRUE, las=1, border = NA,
main = paste0(cons$short.name,", Scores by Item"))
color = gray(level = nrow(tograph)/nrow(tograph):1)
color = gray(level = 1:nrow(tograph)/nrow(tograph))
color = gray(level = rev(1:nrow(tograph)/nrow(tograph)))
barplot(cbind(tograph[,seq(ncol(tograph),1,-1)],rep(0,nrow(tograph))),
col=color, horiz=TRUE, las=1, border = NA,
main = paste0(cons$short.name,", Scores by Item"))
1:nrow(tograph)/nrow(tograph)
barplot(cbind(tograph[,seq(ncol(tograph),1,-1)],rep(0,nrow(tograph))),
col=color, horiz=TRUE, las=1, border = c(NA,rep(TRUE,I)),
main = paste0(cons$short.name,", Scores by Item"))
barplot(cbind(tograph[,seq(ncol(tograph),1,-1)],rep(NA,nrow(tograph))),
col=color, horiz=TRUE, las=1,
main = paste0(cons$short.name,", Scores by Item"))
legend(x = "top", legend = row.names(tograph), pch = 22, col = "black",
pt.bg = color, horiz = TRUE, pt.cex = 2)
?legend
barplot(cbind(tograph[,seq(ncol(tograph),1,-1)],rep(NA,nrow(tograph))),
col=color, horiz=TRUE, las=1,
main = paste0(cons$short.name,", Scores by Item"))
legend(x = "top", legend = row.names(tograph), pch = 22, col = "black",
pt.bg = color, horiz = TRUE, pt.cex = 2, bty = "n")
legend(x = "top", legend = row.names(tograph), pch = 22, col = "black",
pt.bg = color, horiz = TRUE, pt.cex = 2, bty = "n", text.width = 2)
barplot(cbind(tograph[,seq(ncol(tograph),1,-1)],rep(NA,nrow(tograph))),
col=color, horiz=TRUE, las=1,
main = paste0(cons$short.name,", Scores by Item"))
legend(x = "top", legend = row.names(tograph), pch = 22, col = "black",
pt.bg = color, horiz = TRUE, pt.cex = 2, bty = "n", text.width = 10)
barplot(cbind(tograph[,seq(ncol(tograph),1,-1)],rep(NA,nrow(tograph))),
col=color, horiz=TRUE, las=1,
main = paste0(cons$short.name,", Scores by Item"))
legend(x = "top", legend = row.names(tograph), pch = 22, col = "black",
pt.bg = color, horiz = TRUE, pt.cex = 2, bty = "n", text.width = 40/nrow(tograph))
legend(x = "top", legend = row.names(tograph), pch = 22, col = "black",
pt.bg = color, horiz = TRUE, pt.cex = 2, bty = "n", text.width = 20/nrow(tograph))
barplot(cbind(tograph[,seq(ncol(tograph),1,-1)],rep(NA,nrow(tograph))),
col=color, horiz=TRUE, las=1,
main = paste0(cons$short.name,", Scores by Item"))
legend(x = "top", legend = row.names(tograph), pch = 22, col = "black",
pt.bg = color, horiz = TRUE, pt.cex = 2, bty = "n", text.width = 20/nrow(tograph))
legend(x = "top", legend = row.names(tograph), pch = 22, col = "black",
pt.bg = color, horiz = TRUE, pt.cex = 2, bty = "n",
text.width = 35/nrow(tograph))
colSums(tograph)
barplot(cbind(tograph[,seq(ncol(tograph),1,-1)],rep(NA,nrow(tograph))),
col=color, horiz=TRUE, las=1,
main = paste0(cons$short.name,", Scores by Item"))
legend(x = "top", legend = row.names(tograph), pch = 22, col = "black",
pt.bg = color, horiz = TRUE, pt.cex = 2, bty = "n",
text.width = .5*colSums(tograph)/nrow(tograph))
legend(x = "top", legend = row.names(tograph), pch = 22, col = "black",
pt.bg = color, horiz = TRUE, pt.cex = 2, bty = "n",
text.width = .5*max(colSums(tograph))/nrow(tograph))
legend(x = "top", legend = row.names(tograph), pch = 22, col = "black",
pt.bg = color, horiz = TRUE, pt.cex = 2, bty = "n",
text.width = .3*max(colSums(tograph))/nrow(tograph))
legend(x = "top", legend = row.names(tograph), pch = 22, col = "black",
pt.bg = color, horiz = TRUE, pt.cex = 2, bty = "n",
text.width = .8*max(colSums(tograph))/nrow(tograph))
legend(x = "top", legend = row.names(tograph), pch = 22, col = "black",
pt.bg = color, horiz = TRUE, pt.cex = 2, bty = "n",
text.width = .75*max(colSums(tograph))/nrow(tograph))
barplot(cbind(tograph[,seq(ncol(tograph),1,-1)],rep(NA,nrow(tograph))),
col=color, horiz=TRUE, las=1,
main = paste0(cons$short.name,", Scores by Item"))
legend(x = "top", legend = row.names(tograph), pch = 22, col = "black",
pt.bg = color, horiz = TRUE, pt.cex = 2, bty = "n",
text.width = .75*max(colSums(tograph))/nrow(tograph))
barplot(cbind(tograph[,seq(ncol(tograph),1,-1)],rep(NA,nrow(tograph))),
col=color, horiz=TRUE, las=1,
main = paste0(cons$short.name,", Scores by Item"))
legend(x = "top", legend = row.names(tograph), pch = 22, col = "black",
pt.bg = color, horiz = TRUE, pt.cex = 2, bty = "n",
text.width = max(colSums(tograph))/(nrow(tograph)+1))
color = RColorBrewer::brewer.pal(K, palette)
barplot(cbind(tograph[,seq(ncol(tograph),1,-1)],rep(NA,nrow(tograph))),
col=color, horiz=TRUE, las=1,
main = paste0(cons$short.name,", Scores by Item"))
legend(x = "top", legend = row.names(tograph), pch = 22, col = "black",
pt.bg = color, horiz = TRUE, pt.cex = 2, bty = "n",
text.width = max(colSums(tograph))/(nrow(tograph)+1))
dev.off()
source('~/OneDrive/Development/crasch/R/descriptives.R')
item.scores(test)
item.scores(test,freq=TRUE)
item.scores(test,freq=FALSE)
filePrefix = NULL
graphout = paste0(filePrefix,"itemscores",d,".",imgType)
tableout = paste0(filePrefix,"itemscores",d,".csv")
graphout = paste0(filePrefix,"itemscores",d,".",imageType)
imageType = "pdf"
graphout = paste0(filePrefix,"itemscores",d,".",imageType)
graphout
filePrefix = "analysis1"
graphout = paste0(filePrefix,"itemscores",d,".",imageType)
tableout = paste0(filePrefix,"itemscores",d,".csv")
filePrefix = NULL
graphout = paste0(filePrefix,"itemscores",d,".",imageType)
tableout = paste0(filePrefix,"itemscores",d,".csv")
eval(parse(text=paste0(imageType,"('",graphout,"')")))
barplot(cbind(tograph[,seq(ncol(tograph),1,-1)],rep(NA,nrow(tograph))),
col=color, horiz=TRUE, las=1,
main = paste0(cons$short.name,", Scores by Item"))
legend(x = "top", legend = row.names(tograph), pch = 22, col = "black",
pt.bg = color, horiz = TRUE, pt.cex = 2, bty = "n",
text.width = max(colSums(tograph))/(nrow(tograph)+1))
dev.off()
?prop.table
prop.table(tograph,margin=2)
list(t(tograph),t(prop.table(tograph,margins = 2)))
list(t(tograph),t(prop.table(tograph,margin = 2)))
tables <- list(counts = t(tograph),
proportions = t(prop.table(tograph, margin = 2)))
tables
for (i in seq(1,ncol(tables[[1]]))) {
for (j in seq(1,nrow(tables[[1]])-1)) {
if (SG[j,i+1]==0) {
tables[[1]][j,i] <- NA
tables[[2]][j,i] <- NA
}
}
}
names(test)
results$itemInfo
results$itemInfo[results$itemInfo$cons.ID == cons$cons.ID, 6:ncol(results$itemInfo)]
!results$itemInfo[results$itemInfo$cons.ID == cons$cons.ID, 6:ncol(results$itemInfo)]
tables[[1]][!results$itemInfo[results$itemInfo$cons.ID == cons$cons.ID, 6:ncol(results$itemInfo)]]
tables <- list(counts = t(tograph),
proportions = t(prop.table(tograph, margin = 2)))
# replace 0 counts with NAs if level was not possible for that item
tables[[1]][!results$itemInfo[results$itemInfo$cons.ID == cons$cons.ID, 6:ncol(results$itemInfo)]] = NA
tables[[2]][!results$itemInfo[results$itemInfo$cons.ID == cons$cons.ID, 6:ncol(results$itemInfo)]] = NA
tables
tableout
write.table(tables[[1]],tableout,sep=",",col.names=NA)
blankrow = c("Proportions",rep("",ncol(tables[[1]])-1))
write.table("Proportions",tableout,sep=",",append=TRUE,col.names=FALSE)
write.table(tables[[2]],tableout,sep=",",append=TRUE,col.names=FALSE))
write.table(tables[[1]],tableout,sep=",",col.names=NA)
blankrow = c("Proportions",rep("",ncol(tables[[1]])-1))
write.table("Proportions",tableout,sep=",",append=TRUE,col.names=FALSE)
write.table(tables[[2]],tableout,sep=",",append=TRUE,col.names=FALSE)
source('~/OneDrive/Development/crasch/R/descriptives.R')
item.scores(test)
tables <- list(paste0(cons$short.name,"Counts") = t(tograph),
proportions = t(prop.table(tograph, margin = 2)))
source('~/OneDrive/Development/crasch/R/descriptives.R')
item.scores(test)
source('~/OneDrive/Development/crasch/R/descriptives.R')
item.scores(test)
source('~/OneDrive/Development/crasch/R/descriptives.R')
item.scores(test)
source('~/OneDrive/Development/crasch/R/descriptives.R')
item.scores(test,writeout=TRUE)
source('~/OneDrive/Development/crasch/R/descriptives.R')
item.scores(test,writeout=TRUE)
source('~/OneDrive/Development/crasch/R/descriptives.R')
item.scores(test,writeout=TRUE)
source('~/OneDrive/Development/crasch/R/descriptives.R')
item.scores(test)
source('~/OneDrive/Development/crasch/R/descriptives.R')
item.scores(test)
plot(cars)
devtools::document()
devtools::load_all()
?item.scores
source('~/OneDrive/Development/crasch/R/descriptives.R')
item.scores(test,dim=1)
item.scores(test,dim=2)
source('~/OneDrive/Development/crasch/R/descriptives.R')
item.scores(test,dim=2)
wide = AMYwide
itemsXscores = AMYitem[,6:10]
itemsXscores
table(wide[,1])
which(itemsXscores[1,])
class(itemsXscores[1,])
as.logical(itemsXscores)
itemsXscores = t(itemsXscores)
class(itemsXscores[,1])
itemScoreInfo = itemsXscores
rm(itemsXscores)
which(itemScoreInfo[1,])
which(itemScoreInfo[,1])
sum(wide[,1] %in% itemScoreInfo[,1])
wide[,1] %in% itemScoreInfo[,1]
sum(wide[,1] %in% which(itemScoreInfo[,1]))
sum(!wide[,1] %in% which(itemScoreInfo[,1]))
sum(!which(itemScoreInfo[,1]) %in% wide[,1])
!which(itemScoreInfo[,1]) %in% wide[,1]
which(!which(itemScoreInfo[,1]) %in% wide[,1])
i=2
which(!which(itemScoreInfo[,i]) %in% wide[,i])
i=3
which(!which(itemScoreInfo[,i]) %in% wide[,i])
i=4
which(!which(itemScoreInfo[,i]) %in% wide[,i])
!which(itemScoreInfo[,i]) %in% wide[,i]
i=5
which(!which(itemScoreInfo[,i]) %in% wide[,i])
i=6
which(!which(itemScoreInfo[,i]) %in% wide[,i])
i=7
which(!which(itemScoreInfo[,i]) %in% wide[,i])
i=8
which(!which(itemScoreInfo[,i]) %in% wide[,i])
source('~/OneDrive/Development/crasch/R/objectCreation.R')
empty.cats(wide,itemScoreInfo)
source('~/OneDrive/Development/crasch/R/craschR.R')
test <- craschR(scores=AMYwide,itemInfo=AMYitem,consInfo=AMYcons,varsInfo=AMYvars,estPackage="TAM",consecutive=TRUE,retainOrig=TRUE,writeout=FALSE)
names(craschR)
names(test)
test$empties
library(TAM)
library(tam)
install.packages("TAM")
library(TAM)
